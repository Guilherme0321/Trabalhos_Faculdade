#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x5651e25ca4d0 .scope module, "main" "main" 2 9;
 .timescale 0 0;
v0x5651e25ec420_0 .var "a", 0 0;
v0x5651e25ec4e0_0 .var "b", 0 0;
v0x5651e25ec5f0_0 .var "c", 0 0;
v0x5651e25ec6e0_0 .var "counter", 3 0;
v0x5651e25ec780_0 .net "s", 0 0, L_0x5651e25ed520;  1 drivers
v0x5651e25ec870_0 .net "s2", 0 0, L_0x5651e25edbc0;  1 drivers
v0x5651e25ec910 .array/i "tabela", 23 0, 31 0;
S_0x5651e25ca660 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 2 19, 2 19 0, S_0x5651e25ca4d0;
 .timescale 0 0;
v0x5651e25ea630_0 .var/i "i", 31 0;
S_0x5651e25cb9a0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 2 20, 2 20 0, S_0x5651e25ca660;
 .timescale 0 0;
v0x5651e25be290_0 .var/i "j", 31 0;
S_0x5651e25ea730 .scope module, "exe1" "naoResumido" 2 16, 2 1 0, S_0x5651e25ca4d0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "s";
    .port_info 1 /INPUT 1 "a";
    .port_info 2 /INPUT 1 "b";
    .port_info 3 /INPUT 1 "c";
L_0x5651e25ec9b0 .functor NOT 1, v0x5651e25ec420_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25eca20 .functor NOT 1, v0x5651e25ec4e0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ecab0 .functor AND 1, L_0x5651e25ec9b0, L_0x5651e25eca20, C4<1>, C4<1>;
L_0x5651e25ecbf0 .functor NOT 1, v0x5651e25ec5f0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ecc90 .functor AND 1, L_0x5651e25ecab0, L_0x5651e25ecbf0, C4<1>, C4<1>;
L_0x5651e25ecda0 .functor NOT 1, v0x5651e25ec420_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ecee0 .functor AND 1, L_0x5651e25ecda0, v0x5651e25ec4e0_0, C4<1>, C4<1>;
L_0x5651e25ecfe0 .functor NOT 1, v0x5651e25ec5f0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ed130 .functor AND 1, L_0x5651e25ecee0, L_0x5651e25ecfe0, C4<1>, C4<1>;
L_0x5651e25ed1a0 .functor OR 1, L_0x5651e25ecc90, L_0x5651e25ed130, C4<0>, C4<0>;
L_0x5651e25ed310 .functor AND 1, v0x5651e25ec420_0, v0x5651e25ec4e0_0, C4<1>, C4<1>;
L_0x5651e25ed380 .functor NOT 1, v0x5651e25ec5f0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ed460 .functor AND 1, L_0x5651e25ed310, L_0x5651e25ed380, C4<1>, C4<1>;
L_0x5651e25ed520 .functor OR 1, L_0x5651e25ed1a0, L_0x5651e25ed460, C4<0>, C4<0>;
v0x5651e25ea9a0_0 .net *"_ivl_0", 0 0, L_0x5651e25ec9b0;  1 drivers
v0x5651e25eaa80_0 .net *"_ivl_10", 0 0, L_0x5651e25ecda0;  1 drivers
v0x5651e25eab60_0 .net *"_ivl_12", 0 0, L_0x5651e25ecee0;  1 drivers
v0x5651e25eac20_0 .net *"_ivl_14", 0 0, L_0x5651e25ecfe0;  1 drivers
v0x5651e25ead00_0 .net *"_ivl_16", 0 0, L_0x5651e25ed130;  1 drivers
v0x5651e25eae30_0 .net *"_ivl_18", 0 0, L_0x5651e25ed1a0;  1 drivers
v0x5651e25eaf10_0 .net *"_ivl_2", 0 0, L_0x5651e25eca20;  1 drivers
v0x5651e25eaff0_0 .net *"_ivl_20", 0 0, L_0x5651e25ed310;  1 drivers
v0x5651e25eb0d0_0 .net *"_ivl_22", 0 0, L_0x5651e25ed380;  1 drivers
v0x5651e25eb1b0_0 .net *"_ivl_24", 0 0, L_0x5651e25ed460;  1 drivers
v0x5651e25eb290_0 .net *"_ivl_4", 0 0, L_0x5651e25ecab0;  1 drivers
v0x5651e25eb370_0 .net *"_ivl_6", 0 0, L_0x5651e25ecbf0;  1 drivers
v0x5651e25eb450_0 .net *"_ivl_8", 0 0, L_0x5651e25ecc90;  1 drivers
v0x5651e25eb530_0 .net "a", 0 0, v0x5651e25ec420_0;  1 drivers
v0x5651e25eb5f0_0 .net "b", 0 0, v0x5651e25ec4e0_0;  1 drivers
v0x5651e25eb6b0_0 .net "c", 0 0, v0x5651e25ec5f0_0;  1 drivers
v0x5651e25eb770_0 .net "s", 0 0, L_0x5651e25ed520;  alias, 1 drivers
S_0x5651e25eb8b0 .scope module, "exe1r" "resumido" 2 17, 2 5 0, S_0x5651e25ca4d0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "s";
    .port_info 1 /INPUT 1 "a";
    .port_info 2 /INPUT 1 "b";
    .port_info 3 /INPUT 1 "c";
L_0x5651e25ed3f0 .functor NOT 1, v0x5651e25ec420_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ed700 .functor NOT 1, v0x5651e25ec4e0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ed790 .functor AND 1, L_0x5651e25ed3f0, L_0x5651e25ed700, C4<1>, C4<1>;
L_0x5651e25ed8a0 .functor NOT 1, v0x5651e25ec5f0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25ed940 .functor AND 1, L_0x5651e25ed790, L_0x5651e25ed8a0, C4<1>, C4<1>;
L_0x5651e25eda50 .functor NOT 1, v0x5651e25ec5f0_0, C4<0>, C4<0>, C4<0>;
L_0x5651e25edb00 .functor AND 1, v0x5651e25ec4e0_0, L_0x5651e25eda50, C4<1>, C4<1>;
L_0x5651e25edbc0 .functor OR 1, L_0x5651e25ed940, L_0x5651e25edb00, C4<0>, C4<0>;
v0x5651e25ebab0_0 .net *"_ivl_0", 0 0, L_0x5651e25ed3f0;  1 drivers
v0x5651e25ebb90_0 .net *"_ivl_10", 0 0, L_0x5651e25eda50;  1 drivers
v0x5651e25ebc70_0 .net *"_ivl_12", 0 0, L_0x5651e25edb00;  1 drivers
v0x5651e25ebd30_0 .net *"_ivl_2", 0 0, L_0x5651e25ed700;  1 drivers
v0x5651e25ebe10_0 .net *"_ivl_4", 0 0, L_0x5651e25ed790;  1 drivers
v0x5651e25ebf40_0 .net *"_ivl_6", 0 0, L_0x5651e25ed8a0;  1 drivers
v0x5651e25ec020_0 .net *"_ivl_8", 0 0, L_0x5651e25ed940;  1 drivers
v0x5651e25ec100_0 .net "a", 0 0, v0x5651e25ec420_0;  alias, 1 drivers
v0x5651e25ec1a0_0 .net "b", 0 0, v0x5651e25ec4e0_0;  alias, 1 drivers
v0x5651e25ec240_0 .net "c", 0 0, v0x5651e25ec5f0_0;  alias, 1 drivers
v0x5651e25ec310_0 .net "s", 0 0, L_0x5651e25edbc0;  alias, 1 drivers
    .scope S_0x5651e25ca4d0;
T_0 ;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5651e25ec6e0_0, 0, 4;
    %end;
    .thread T_0;
    .scope S_0x5651e25ca4d0;
T_1 ;
    %fork t_1, S_0x5651e25ca660;
    %jmp t_0;
    .scope S_0x5651e25ca660;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5651e25ea630_0, 0, 32;
T_1.0 ;
    %load/vec4 v0x5651e25ea630_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_1.1, 5;
    %fork t_3, S_0x5651e25cb9a0;
    %jmp t_2;
    .scope S_0x5651e25cb9a0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5651e25be290_0, 0, 32;
T_1.2 ;
    %load/vec4 v0x5651e25be290_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_1.3, 5;
    %load/vec4 v0x5651e25ec6e0_0;
    %parti/s 1, 2, 3;
    %store/vec4 v0x5651e25ec420_0, 0, 1;
    %load/vec4 v0x5651e25ec6e0_0;
    %parti/s 1, 1, 2;
    %store/vec4 v0x5651e25ec4e0_0, 0, 1;
    %load/vec4 v0x5651e25ec6e0_0;
    %parti/s 1, 0, 2;
    %store/vec4 v0x5651e25ec5f0_0, 0, 1;
    %delay 0, 0;
    %load/vec4 v0x5651e25ec780_0;
    %pad/u 32;
    %load/vec4 v0x5651e25ea630_0;
    %pad/s 34;
    %pad/s 36;
    %muli 3, 0, 36;
    %pad/s 37;
    %load/vec4 v0x5651e25be290_0;
    %pad/s 37;
    %add;
    %ix/vec4/s 4;
    %store/vec4a v0x5651e25ec910, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5651e25ec6e0_0;
    %pushi/vec4 1, 0, 4;
    %add;
    %store/vec4 v0x5651e25ec6e0_0, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5651e25be290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5651e25be290_0, 0, 32;
    %jmp T_1.2;
T_1.3 ;
    %end;
    .scope S_0x5651e25ca660;
t_2 %join;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5651e25ea630_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5651e25ea630_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .scope S_0x5651e25ca4d0;
t_0 %join;
    %vpi_call 2 30 "$display", "  -------------" {0 0 0};
    %load/vec4 v0x5651e25ec6e0_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %vpi_call 2 31 "$display", "  |   |%2d |%2d |", &PV<v0x5651e25ec6e0_0, 0, 2>, S<0,vec4,u32> {1 0 0};
    %vpi_call 2 32 "$display", "  -------------" {0 0 0};
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5651e25ec6e0_0, 0, 4;
T_1.4 ;
    %load/vec4 v0x5651e25ec6e0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %jmp/0xz T_1.5, 5;
    %load/vec4 v0x5651e25ec6e0_0;
    %pad/u 7;
    %pad/u 9;
    %muli 3, 0, 9;
    %ix/vec4 4;
    %load/vec4a v0x5651e25ec910, 4;
    %load/vec4 v0x5651e25ec6e0_0;
    %pad/u 7;
    %pad/u 9;
    %muli 3, 0, 9;
    %pad/u 10;
    %pushi/vec4 1, 0, 2;
    %pad/s 10;
    %add;
    %ix/vec4 4;
    %load/vec4a v0x5651e25ec910, 4;
    %vpi_call 2 34 "$display", "  |%2b |%2d |%2d |", &PV<v0x5651e25ec6e0_0, 0, 2>, S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call 2 35 "$display", "  -------------" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5651e25ec6e0_0;
    %pushi/vec4 1, 0, 4;
    %add;
    %store/vec4 v0x5651e25ec6e0_0, 0, 4;
    %jmp T_1.4;
T_1.5 ;
    %vpi_call 2 38 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "ExercicioB.v";
